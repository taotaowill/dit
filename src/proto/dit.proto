package baidu.dit.proto;

option cc_generic_services = true;

enum Status {
    kOk = 0;
    kError = 1;
}

enum Option {
    kOptionAll = 0;
    kOptionColor = 1;
    kOptionForce = 2;
    kOptionRecursive = 3;
}

enum DitFileType {
    kDitFile = 1;
    kDitDirectory = 2;
    kDitSymlink = 3;
}

message ReturnCode {
    optional Status status = 1;
    optional string message = 2;
}

message DitFileMeta {
    optional DitFileType type = 1;
    optional string path = 2;
    optional string canonical = 3;
    optional int64 size = 4;
    optional string group = 5;
    optional string owner = 6;
    optional int32 perms = 7;
    optional int64 accessed = 8;
    optional int64 modified = 9;
    optional int64 changed = 10;
}

message DitFileBlock {
    optional string path = 1;
    optional int64 offset = 2;
    optional int64 length = 3;
    optional bytes content = 4;
}

//message RmRequest {
//    optional string path = 1;
//    repeated Option options = 2;
//}
//
//message RmResponse {
//    optional ReturnCode ret = 1;
//}

message PutFileMetaRequest {
    repeated DitFileMeta files = 1;
}

message PutFileMetaResponse {
    optional ReturnCode ret = 1;
}

message PutFileBlockRequest {
    optional DitFileBlock block = 1;
}

message PutFileBlockResponse {
    optional ReturnCode ret = 1;
}

message GetFileMetaRequest {
    optional string path = 1;
    repeated Option options = 2;
}

message GetFileMetaResponse {
    optional ReturnCode ret = 1;
    repeated DitFileMeta files = 2;
}

message GetFileBlockRequest {
    optional DitFileBlock block = 1;
}

message GetFileBlockResponse {
    optional ReturnCode ret = 1;
    optional DitFileBlock block = 2;
}

service DitServer {
    rpc GetFileMeta(GetFileMetaRequest) returns (GetFileMetaResponse);
    rpc PutFileMeta(PutFileMetaRequest) returns (PutFileMetaResponse);
    rpc GetFileBlock(GetFileBlockRequest) returns (GetFileBlockResponse);
    rpc PutFileBlock(PutFileBlockRequest) returns (PutFileBlockResponse);
}

